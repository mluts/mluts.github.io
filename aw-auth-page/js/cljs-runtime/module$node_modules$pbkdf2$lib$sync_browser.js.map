{
"version":3,
"file":"module$node_modules$pbkdf2$lib$sync_browser.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/pbkdf2/lib/sync-browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pbkdf2$lib$sync_browser\"] = function(global,require,module,exports) {\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n\n};"],
"names":["shadow$provide","global","require","module","exports","Hmac","alg","key","saltLen","hash","getDigest","blocksize","length","Buffer","concat","ZEROS","ipad","allocUnsafe","sizes","opad","i","ipad1","copy","ipad2","size","rmd160Func","data","update","RIPEMD160","digest","md5","shaFunc","sha","checkParameters","defaultEncoding","toBuffer","alloc","sha1","sha224","sha256","sha384","sha512","rmd160","ripemd160","prototype","run","Hmac.prototype.run","h","pbkdf2","password","salt","iterations","keylen","hmac","DK","block1","destPos","hLen","l","Math","ceil","writeUInt32BE","T","U","j","k"]
}
