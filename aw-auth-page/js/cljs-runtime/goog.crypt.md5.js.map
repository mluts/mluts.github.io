{
"version":3,
"file":"goog.crypt.md5.js",
"lineCount":238,
"mappings":"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",
"sources":["goog/crypt/md5.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview MD5 cryptographic hash.\n * Implementation of http://tools.ietf.org/html/rfc1321 with common\n * optimizations and tweaks (see http://en.wikipedia.org/wiki/MD5).\n *\n * Usage:\n *   var md5 = new goog.crypt.Md5();\n *   md5.update(bytes);\n *   var hash = md5.digest();\n *\n * Performance:\n *   Chrome 23              ~680 Mbit/s\n *   Chrome 13 (in a VM)    ~250 Mbit/s\n *   Firefox 6.0 (in a VM)  ~100 Mbit/s\n *   IE9 (in a VM)           ~27 Mbit/s\n *   Firefox 3.6             ~15 Mbit/s\n *   IE8 (in a VM)           ~13 Mbit/s\n */\n\ngoog.provide('goog.crypt.Md5');\n\ngoog.require('goog.crypt.Hash');\n\n\n\n/**\n * MD5 cryptographic hash constructor.\n * @constructor\n * @extends {goog.crypt.Hash}\n * @final\n * @struct\n */\ngoog.crypt.Md5 = function() {\n  'use strict';\n  goog.crypt.Md5.base(this, 'constructor');\n\n  this.blockSize = 512 / 8;\n\n  /**\n   * Holds the current values of accumulated A-D variables (MD buffer).\n   * @type {!Array<number>}\n   * @private\n   */\n  this.chain_ = new Array(4);\n\n  /**\n   * A buffer holding the data until the whole block can be processed.\n   * @type {!Array<number>}\n   * @private\n   */\n  this.block_ = new Array(this.blockSize);\n\n  /**\n   * The length of yet-unprocessed data as collected in the block.\n   * @type {number}\n   * @private\n   */\n  this.blockLength_ = 0;\n\n  /**\n   * The total length of the message so far.\n   * @type {number}\n   * @private\n   */\n  this.totalLength_ = 0;\n\n  this.reset();\n};\ngoog.inherits(goog.crypt.Md5, goog.crypt.Hash);\n\n\n/**\n * Integer rotation constants used by the abbreviated implementation.\n * They are hardcoded in the unrolled implementation, so it is left\n * here commented out.\n * @type {Array<number>}\n * @private\n *\ngoog.crypt.Md5.S_ = [\n  7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,\n  5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20,\n  4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23,\n  6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21\n];\n */\n\n/**\n * Sine function constants used by the abbreviated implementation.\n * They are hardcoded in the unrolled implementation, so it is left\n * here commented out.\n * @type {Array<number>}\n * @private\n *\ngoog.crypt.Md5.T_ = [\n  0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee,\n  0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501,\n  0x698098d8, 0x8b44f7af, 0xffff5bb1, 0x895cd7be,\n  0x6b901122, 0xfd987193, 0xa679438e, 0x49b40821,\n  0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa,\n  0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8,\n  0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed,\n  0xa9e3e905, 0xfcefa3f8, 0x676f02d9, 0x8d2a4c8a,\n  0xfffa3942, 0x8771f681, 0x6d9d6122, 0xfde5380c,\n  0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,\n  0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x04881d05,\n  0xd9d4d039, 0xe6db99e5, 0x1fa27cf8, 0xc4ac5665,\n  0xf4292244, 0x432aff97, 0xab9423a7, 0xfc93a039,\n  0x655b59c3, 0x8f0ccc92, 0xffeff47d, 0x85845dd1,\n  0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1,\n  0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391\n];\n */\n\n\n/** @override */\ngoog.crypt.Md5.prototype.reset = function() {\n  'use strict';\n  this.chain_[0] = 0x67452301;\n  this.chain_[1] = 0xefcdab89;\n  this.chain_[2] = 0x98badcfe;\n  this.chain_[3] = 0x10325476;\n\n  this.blockLength_ = 0;\n  this.totalLength_ = 0;\n};\n\n\n/**\n * Internal compress helper function. It takes a block of data (64 bytes)\n * and updates the accumulator.\n * @param {Array<number>|Uint8Array|string} buf The block to compress.\n * @param {number=} opt_offset Offset of the block in the buffer.\n * @private\n */\ngoog.crypt.Md5.prototype.compress_ = function(buf, opt_offset) {\n  'use strict';\n  if (!opt_offset) {\n    opt_offset = 0;\n  }\n\n  // We allocate the array every time, but it's cheap in practice.\n  var X = new Array(16);\n\n  // Get 16 little endian words. It is not worth unrolling this for Chrome 11.\n  if (typeof buf === 'string') {\n    for (var i = 0; i < 16; ++i) {\n      X[i] = (buf.charCodeAt(opt_offset++)) |\n          (buf.charCodeAt(opt_offset++) << 8) |\n          (buf.charCodeAt(opt_offset++) << 16) |\n          (buf.charCodeAt(opt_offset++) << 24);\n    }\n  } else {\n    for (var i = 0; i < 16; ++i) {\n      X[i] = (buf[opt_offset++]) | (buf[opt_offset++] << 8) |\n          (buf[opt_offset++] << 16) | (buf[opt_offset++] << 24);\n    }\n  }\n\n  var A = this.chain_[0];\n  var B = this.chain_[1];\n  var C = this.chain_[2];\n  var D = this.chain_[3];\n  var sum = 0;\n\n  /*\n   * This is an abbreviated implementation, it is left here commented out for\n   * reference purposes. See below for an unrolled version in use.\n   *\n  var f, n, tmp;\n  for (var i = 0; i < 64; ++i) {\n\n    if (i < 16) {\n      f = (D ^ (B & (C ^ D)));\n      n = i;\n    } else if (i < 32) {\n      f = (C ^ (D & (B ^ C)));\n      n = (5 * i + 1) % 16;\n    } else if (i < 48) {\n      f = (B ^ C ^ D);\n      n = (3 * i + 5) % 16;\n    } else {\n      f = (C ^ (B | (~D)));\n      n = (7 * i) % 16;\n    }\n\n    tmp = D;\n    D = C;\n    C = B;\n    sum = (A + f + goog.crypt.Md5.T_[i] + X[n]) & 0xffffffff;\n    B += ((sum << goog.crypt.Md5.S_[i]) & 0xffffffff) |\n         (sum >>> (32 - goog.crypt.Md5.S_[i]));\n    A = tmp;\n  }\n   */\n\n  /*\n   * This is an unrolled MD5 implementation, which gives ~30% speedup compared\n   * to the abbreviated implementation above, as measured on Chrome 11. It is\n   * important to keep 32-bit croppings to minimum and inline the integer\n   * rotation.\n   */\n  sum = (A + (D ^ (B & (C ^ D))) + X[0] + 0xd76aa478) & 0xffffffff;\n  A = B + (((sum << 7) & 0xffffffff) | (sum >>> 25));\n  sum = (D + (C ^ (A & (B ^ C))) + X[1] + 0xe8c7b756) & 0xffffffff;\n  D = A + (((sum << 12) & 0xffffffff) | (sum >>> 20));\n  sum = (C + (B ^ (D & (A ^ B))) + X[2] + 0x242070db) & 0xffffffff;\n  C = D + (((sum << 17) & 0xffffffff) | (sum >>> 15));\n  sum = (B + (A ^ (C & (D ^ A))) + X[3] + 0xc1bdceee) & 0xffffffff;\n  B = C + (((sum << 22) & 0xffffffff) | (sum >>> 10));\n  sum = (A + (D ^ (B & (C ^ D))) + X[4] + 0xf57c0faf) & 0xffffffff;\n  A = B + (((sum << 7) & 0xffffffff) | (sum >>> 25));\n  sum = (D + (C ^ (A & (B ^ C))) + X[5] + 0x4787c62a) & 0xffffffff;\n  D = A + (((sum << 12) & 0xffffffff) | (sum >>> 20));\n  sum = (C + (B ^ (D & (A ^ B))) + X[6] + 0xa8304613) & 0xffffffff;\n  C = D + (((sum << 17) & 0xffffffff) | (sum >>> 15));\n  sum = (B + (A ^ (C & (D ^ A))) + X[7] + 0xfd469501) & 0xffffffff;\n  B = C + (((sum << 22) & 0xffffffff) | (sum >>> 10));\n  sum = (A + (D ^ (B & (C ^ D))) + X[8] + 0x698098d8) & 0xffffffff;\n  A = B + (((sum << 7) & 0xffffffff) | (sum >>> 25));\n  sum = (D + (C ^ (A & (B ^ C))) + X[9] + 0x8b44f7af) & 0xffffffff;\n  D = A + (((sum << 12) & 0xffffffff) | (sum >>> 20));\n  sum = (C + (B ^ (D & (A ^ B))) + X[10] + 0xffff5bb1) & 0xffffffff;\n  C = D + (((sum << 17) & 0xffffffff) | (sum >>> 15));\n  sum = (B + (A ^ (C & (D ^ A))) + X[11] + 0x895cd7be) & 0xffffffff;\n  B = C + (((sum << 22) & 0xffffffff) | (sum >>> 10));\n  sum = (A + (D ^ (B & (C ^ D))) + X[12] + 0x6b901122) & 0xffffffff;\n  A = B + (((sum << 7) & 0xffffffff) | (sum >>> 25));\n  sum = (D + (C ^ (A & (B ^ C))) + X[13] + 0xfd987193) & 0xffffffff;\n  D = A + (((sum << 12) & 0xffffffff) | (sum >>> 20));\n  sum = (C + (B ^ (D & (A ^ B))) + X[14] + 0xa679438e) & 0xffffffff;\n  C = D + (((sum << 17) & 0xffffffff) | (sum >>> 15));\n  sum = (B + (A ^ (C & (D ^ A))) + X[15] + 0x49b40821) & 0xffffffff;\n  B = C + (((sum << 22) & 0xffffffff) | (sum >>> 10));\n  sum = (A + (C ^ (D & (B ^ C))) + X[1] + 0xf61e2562) & 0xffffffff;\n  A = B + (((sum << 5) & 0xffffffff) | (sum >>> 27));\n  sum = (D + (B ^ (C & (A ^ B))) + X[6] + 0xc040b340) & 0xffffffff;\n  D = A + (((sum << 9) & 0xffffffff) | (sum >>> 23));\n  sum = (C + (A ^ (B & (D ^ A))) + X[11] + 0x265e5a51) & 0xffffffff;\n  C = D + (((sum << 14) & 0xffffffff) | (sum >>> 18));\n  sum = (B + (D ^ (A & (C ^ D))) + X[0] + 0xe9b6c7aa) & 0xffffffff;\n  B = C + (((sum << 20) & 0xffffffff) | (sum >>> 12));\n  sum = (A + (C ^ (D & (B ^ C))) + X[5] + 0xd62f105d) & 0xffffffff;\n  A = B + (((sum << 5) & 0xffffffff) | (sum >>> 27));\n  sum = (D + (B ^ (C & (A ^ B))) + X[10] + 0x02441453) & 0xffffffff;\n  D = A + (((sum << 9) & 0xffffffff) | (sum >>> 23));\n  sum = (C + (A ^ (B & (D ^ A))) + X[15] + 0xd8a1e681) & 0xffffffff;\n  C = D + (((sum << 14) & 0xffffffff) | (sum >>> 18));\n  sum = (B + (D ^ (A & (C ^ D))) + X[4] + 0xe7d3fbc8) & 0xffffffff;\n  B = C + (((sum << 20) & 0xffffffff) | (sum >>> 12));\n  sum = (A + (C ^ (D & (B ^ C))) + X[9] + 0x21e1cde6) & 0xffffffff;\n  A = B + (((sum << 5) & 0xffffffff) | (sum >>> 27));\n  sum = (D + (B ^ (C & (A ^ B))) + X[14] + 0xc33707d6) & 0xffffffff;\n  D = A + (((sum << 9) & 0xffffffff) | (sum >>> 23));\n  sum = (C + (A ^ (B & (D ^ A))) + X[3] + 0xf4d50d87) & 0xffffffff;\n  C = D + (((sum << 14) & 0xffffffff) | (sum >>> 18));\n  sum = (B + (D ^ (A & (C ^ D))) + X[8] + 0x455a14ed) & 0xffffffff;\n  B = C + (((sum << 20) & 0xffffffff) | (sum >>> 12));\n  sum = (A + (C ^ (D & (B ^ C))) + X[13] + 0xa9e3e905) & 0xffffffff;\n  A = B + (((sum << 5) & 0xffffffff) | (sum >>> 27));\n  sum = (D + (B ^ (C & (A ^ B))) + X[2] + 0xfcefa3f8) & 0xffffffff;\n  D = A + (((sum << 9) & 0xffffffff) | (sum >>> 23));\n  sum = (C + (A ^ (B & (D ^ A))) + X[7] + 0x676f02d9) & 0xffffffff;\n  C = D + (((sum << 14) & 0xffffffff) | (sum >>> 18));\n  sum = (B + (D ^ (A & (C ^ D))) + X[12] + 0x8d2a4c8a) & 0xffffffff;\n  B = C + (((sum << 20) & 0xffffffff) | (sum >>> 12));\n  sum = (A + (B ^ C ^ D) + X[5] + 0xfffa3942) & 0xffffffff;\n  A = B + (((sum << 4) & 0xffffffff) | (sum >>> 28));\n  sum = (D + (A ^ B ^ C) + X[8] + 0x8771f681) & 0xffffffff;\n  D = A + (((sum << 11) & 0xffffffff) | (sum >>> 21));\n  sum = (C + (D ^ A ^ B) + X[11] + 0x6d9d6122) & 0xffffffff;\n  C = D + (((sum << 16) & 0xffffffff) | (sum >>> 16));\n  sum = (B + (C ^ D ^ A) + X[14] + 0xfde5380c) & 0xffffffff;\n  B = C + (((sum << 23) & 0xffffffff) | (sum >>> 9));\n  sum = (A + (B ^ C ^ D) + X[1] + 0xa4beea44) & 0xffffffff;\n  A = B + (((sum << 4) & 0xffffffff) | (sum >>> 28));\n  sum = (D + (A ^ B ^ C) + X[4] + 0x4bdecfa9) & 0xffffffff;\n  D = A + (((sum << 11) & 0xffffffff) | (sum >>> 21));\n  sum = (C + (D ^ A ^ B) + X[7] + 0xf6bb4b60) & 0xffffffff;\n  C = D + (((sum << 16) & 0xffffffff) | (sum >>> 16));\n  sum = (B + (C ^ D ^ A) + X[10] + 0xbebfbc70) & 0xffffffff;\n  B = C + (((sum << 23) & 0xffffffff) | (sum >>> 9));\n  sum = (A + (B ^ C ^ D) + X[13] + 0x289b7ec6) & 0xffffffff;\n  A = B + (((sum << 4) & 0xffffffff) | (sum >>> 28));\n  sum = (D + (A ^ B ^ C) + X[0] + 0xeaa127fa) & 0xffffffff;\n  D = A + (((sum << 11) & 0xffffffff) | (sum >>> 21));\n  sum = (C + (D ^ A ^ B) + X[3] + 0xd4ef3085) & 0xffffffff;\n  C = D + (((sum << 16) & 0xffffffff) | (sum >>> 16));\n  sum = (B + (C ^ D ^ A) + X[6] + 0x04881d05) & 0xffffffff;\n  B = C + (((sum << 23) & 0xffffffff) | (sum >>> 9));\n  sum = (A + (B ^ C ^ D) + X[9] + 0xd9d4d039) & 0xffffffff;\n  A = B + (((sum << 4) & 0xffffffff) | (sum >>> 28));\n  sum = (D + (A ^ B ^ C) + X[12] + 0xe6db99e5) & 0xffffffff;\n  D = A + (((sum << 11) & 0xffffffff) | (sum >>> 21));\n  sum = (C + (D ^ A ^ B) + X[15] + 0x1fa27cf8) & 0xffffffff;\n  C = D + (((sum << 16) & 0xffffffff) | (sum >>> 16));\n  sum = (B + (C ^ D ^ A) + X[2] + 0xc4ac5665) & 0xffffffff;\n  B = C + (((sum << 23) & 0xffffffff) | (sum >>> 9));\n  sum = (A + (C ^ (B | (~D))) + X[0] + 0xf4292244) & 0xffffffff;\n  A = B + (((sum << 6) & 0xffffffff) | (sum >>> 26));\n  sum = (D + (B ^ (A | (~C))) + X[7] + 0x432aff97) & 0xffffffff;\n  D = A + (((sum << 10) & 0xffffffff) | (sum >>> 22));\n  sum = (C + (A ^ (D | (~B))) + X[14] + 0xab9423a7) & 0xffffffff;\n  C = D + (((sum << 15) & 0xffffffff) | (sum >>> 17));\n  sum = (B + (D ^ (C | (~A))) + X[5] + 0xfc93a039) & 0xffffffff;\n  B = C + (((sum << 21) & 0xffffffff) | (sum >>> 11));\n  sum = (A + (C ^ (B | (~D))) + X[12] + 0x655b59c3) & 0xffffffff;\n  A = B + (((sum << 6) & 0xffffffff) | (sum >>> 26));\n  sum = (D + (B ^ (A | (~C))) + X[3] + 0x8f0ccc92) & 0xffffffff;\n  D = A + (((sum << 10) & 0xffffffff) | (sum >>> 22));\n  sum = (C + (A ^ (D | (~B))) + X[10] + 0xffeff47d) & 0xffffffff;\n  C = D + (((sum << 15) & 0xffffffff) | (sum >>> 17));\n  sum = (B + (D ^ (C | (~A))) + X[1] + 0x85845dd1) & 0xffffffff;\n  B = C + (((sum << 21) & 0xffffffff) | (sum >>> 11));\n  sum = (A + (C ^ (B | (~D))) + X[8] + 0x6fa87e4f) & 0xffffffff;\n  A = B + (((sum << 6) & 0xffffffff) | (sum >>> 26));\n  sum = (D + (B ^ (A | (~C))) + X[15] + 0xfe2ce6e0) & 0xffffffff;\n  D = A + (((sum << 10) & 0xffffffff) | (sum >>> 22));\n  sum = (C + (A ^ (D | (~B))) + X[6] + 0xa3014314) & 0xffffffff;\n  C = D + (((sum << 15) & 0xffffffff) | (sum >>> 17));\n  sum = (B + (D ^ (C | (~A))) + X[13] + 0x4e0811a1) & 0xffffffff;\n  B = C + (((sum << 21) & 0xffffffff) | (sum >>> 11));\n  sum = (A + (C ^ (B | (~D))) + X[4] + 0xf7537e82) & 0xffffffff;\n  A = B + (((sum << 6) & 0xffffffff) | (sum >>> 26));\n  sum = (D + (B ^ (A | (~C))) + X[11] + 0xbd3af235) & 0xffffffff;\n  D = A + (((sum << 10) & 0xffffffff) | (sum >>> 22));\n  sum = (C + (A ^ (D | (~B))) + X[2] + 0x2ad7d2bb) & 0xffffffff;\n  C = D + (((sum << 15) & 0xffffffff) | (sum >>> 17));\n  sum = (B + (D ^ (C | (~A))) + X[9] + 0xeb86d391) & 0xffffffff;\n  B = C + (((sum << 21) & 0xffffffff) | (sum >>> 11));\n\n  this.chain_[0] = (this.chain_[0] + A) & 0xffffffff;\n  this.chain_[1] = (this.chain_[1] + B) & 0xffffffff;\n  this.chain_[2] = (this.chain_[2] + C) & 0xffffffff;\n  this.chain_[3] = (this.chain_[3] + D) & 0xffffffff;\n};\n\n\n/** @override */\ngoog.crypt.Md5.prototype.update = function(bytes, opt_length) {\n  'use strict';\n  if (opt_length === undefined) {\n    opt_length = bytes.length;\n  }\n  var lengthMinusBlock = opt_length - this.blockSize;\n\n  // Copy some object properties to local variables in order to save on access\n  // time from inside the loop (~10% speedup was observed on Chrome 11).\n  var block = this.block_;\n  var blockLength = this.blockLength_;\n  var i = 0;\n\n  // The outer while loop should execute at most twice.\n  while (i < opt_length) {\n    // When we have no data in the block to top up, we can directly process the\n    // input buffer (assuming it contains sufficient data). This gives ~30%\n    // speedup on Chrome 14 and ~70% speedup on Firefox 6.0, but requires that\n    // the data is provided in large chunks (or in multiples of 64 bytes).\n    if (blockLength == 0) {\n      while (i <= lengthMinusBlock) {\n        this.compress_(bytes, i);\n        i += this.blockSize;\n      }\n    }\n\n    if (typeof bytes === 'string') {\n      while (i < opt_length) {\n        block[blockLength++] = bytes.charCodeAt(i++);\n        if (blockLength == this.blockSize) {\n          this.compress_(block);\n          blockLength = 0;\n          // Jump to the outer loop so we use the full-block optimization.\n          break;\n        }\n      }\n    } else {\n      while (i < opt_length) {\n        block[blockLength++] = bytes[i++];\n        if (blockLength == this.blockSize) {\n          this.compress_(block);\n          blockLength = 0;\n          // Jump to the outer loop so we use the full-block optimization.\n          break;\n        }\n      }\n    }\n  }\n\n  this.blockLength_ = blockLength;\n  this.totalLength_ += opt_length;\n};\n\n\n/** @override */\ngoog.crypt.Md5.prototype.digest = function() {\n  'use strict';\n  // This must accommodate at least 1 padding byte (0x80), 8 bytes of\n  // total bitlength, and must end at a 64-byte boundary.\n  var pad = new Array(\n      (this.blockLength_ < 56 ? this.blockSize : this.blockSize * 2) -\n      this.blockLength_);\n\n  // Add padding: 0x80 0x00*\n  pad[0] = 0x80;\n  for (var i = 1; i < pad.length - 8; ++i) {\n    pad[i] = 0;\n  }\n  // Add the total number of bits, little endian 64-bit integer.\n  var totalBits = this.totalLength_ * 8;\n  for (var i = pad.length - 8; i < pad.length; ++i) {\n    pad[i] = totalBits & 0xff;\n    totalBits /= 0x100;  // Don't use bit-shifting here!\n  }\n  this.update(pad);\n\n  var digest = new Array(16);\n  var n = 0;\n  for (var i = 0; i < 4; ++i) {\n    for (var j = 0; j < 32; j += 8) {\n      digest[n++] = (this.chain_[i] >>> j) & 0xff;\n    }\n  }\n  return digest;\n};\n"],
"names":["goog","provide","require","crypt","Md5","goog.crypt.Md5","base","blockSize","chain_","Array","block_","blockLength_","totalLength_","reset","inherits","Hash","prototype","goog.crypt.Md5.prototype.reset","compress_","goog.crypt.Md5.prototype.compress_","buf","opt_offset","X","i","charCodeAt","A","B","C","D","sum","update","goog.crypt.Md5.prototype.update","bytes","opt_length","undefined","length","lengthMinusBlock","block","blockLength","digest","goog.crypt.Md5.prototype.digest","pad","totalBits","n","j"]
}
