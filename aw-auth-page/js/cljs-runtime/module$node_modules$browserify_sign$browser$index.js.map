{
"version":3,
"file":"module$node_modules$browserify_sign$browser$index.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgB9GC,QAASA,KAAI,CAACC,SAAD,CAAY,CACvBC,MAAOC,CAAAA,QAASC,CAAAA,IAAhB,CAAqB,IAArB,CAEIC,UAAAA,CAAOC,UAAA,CAAWL,SAAX,CACX,IAAI,CAACI,SAAL,CAAa,KAAUE,MAAJ,CAAU,wBAAV,CAAN,CAEb,IAAKC,CAAAA,SAAL,CAAiBH,SAAKI,CAAAA,IACtB,KAAKC,CAAAA,KAAL,CAAaC,UAAA,CAAWN,SAAKI,CAAAA,IAAhB,CACb,KAAKG,CAAAA,IAAL,CAAYP,SAAKQ,CAAAA,EACjB,KAAKC,CAAAA,SAAL,CAAiBT,SAAKU,CAAAA,IATC,CAgCzBC,QAASA,OAAM,CAACf,SAAD,CAAY,CACzBC,MAAOC,CAAAA,QAASC,CAAAA,IAAhB,CAAqB,IAArB,CAEIC,UAAAA,CAAOC,UAAA,CAAWL,SAAX,CACX,IAAI,CAACI,SAAL,CAAa,KAAUE,MAAJ,CAAU,wBAAV,CAAN,CAEb,IAAKG,CAAAA,KAAL;AAAaC,UAAA,CAAWN,SAAKI,CAAAA,IAAhB,CACb,KAAKG,CAAAA,IAAL,CAAYP,SAAKQ,CAAAA,EACjB,KAAKC,CAAAA,SAAL,CAAiBT,SAAKU,CAAAA,IARG,CA+B3BE,QAASA,WAAU,CAAChB,SAAD,CAAY,CAC7B,MAAO,KAAID,IAAJ,CAASC,SAAT,CADsB,CAI/BiB,QAASA,aAAY,CAACjB,SAAD,CAAY,CAC/B,MAAO,KAAIe,MAAJ,CAAWf,SAAX,CADwB,CAhFjC,IAAIkB,OAAStB,OAAA,CAAQ,uCAAR,CAAuBsB,CAAAA,MAApC,CACIR,WAAad,OAAA,CAAQ,yCAAR,CADjB,CAEIK,OAASL,OAAA,CAAQ,sDAAR,CACTuB,OAAAA,CAAWvB,OAAA,CAAQ,+CAAR,CACf,KAAIkB,KAAOlB,OAAA,CAAQ,kDAAR,CAAX;AACIwB,OAASxB,OAAA,CAAQ,oDAAR,CADb,CAGIS,WAAaT,OAAA,CAAQ,6DAAR,CACjByB,OAAOC,CAAAA,IAAP,CAAYjB,UAAZ,CAAwBkB,CAAAA,OAAxB,CAAgC,QAAS,CAACC,GAAD,CAAM,CAC7CnB,UAAA,CAAWmB,GAAX,CAAgBZ,CAAAA,EAAhB,CAAqBM,MAAOO,CAAAA,IAAP,CAAYpB,UAAA,CAAWmB,GAAX,CAAgBZ,CAAAA,EAA5B,CAAgC,KAAhC,CACrBP,WAAA,CAAWmB,GAAIE,CAAAA,WAAJ,EAAX,CAAA,CAAgCrB,UAAA,CAAWmB,GAAX,CAFa,CAA/C,CAgBAL,OAAA,CAASpB,IAAT,CAAeE,MAAOC,CAAAA,QAAtB,CAEAH,KAAK4B,CAAAA,SAAUC,CAAAA,MAAf,CAAwBC,QAAe,CAACzB,IAAD,CAAO0B,CAAP,CAAUC,IAAV,CAAgB,CACrD,IAAKtB,CAAAA,KAAMuB,CAAAA,MAAX,CAAkB5B,IAAlB,CACA2B,KAAA,EAFqD,CAKvDhC,KAAK4B,CAAAA,SAAUK,CAAAA,MAAf,CAAwBC,QAAe,CAAC7B,IAAD,CAAO8B,GAAP,CAAY,CACjD,IAAKzB,CAAAA,KAAMuB,CAAAA,MAAX,CAAkC,QAAhB,GAAA,MAAO5B,KAAP,CAA2Bc,MAAOO,CAAAA,IAAP,CAAYrB,IAAZ;AAAkB8B,GAAlB,CAA3B,CAAoD9B,IAAtE,CAEA,OAAO,KAH0C,CAMnDL,KAAK4B,CAAAA,SAAUb,CAAAA,IAAf,CAAsBqB,QAAmB,CAACX,GAAD,CAAMU,GAAN,CAAW,CAClD,IAAKE,CAAAA,GAAL,EACA,KAAI5B,KAAO,IAAKC,CAAAA,KAAM4B,CAAAA,MAAX,EACPC,IAAAA,CAAMxB,IAAA,CAAKN,IAAL,CAAWgB,GAAX,CAAgB,IAAKjB,CAAAA,SAArB,CAAgC,IAAKM,CAAAA,SAArC,CAAgD,IAAKF,CAAAA,IAArD,CAEV,OAAOuB,IAAA,CAAMI,GAAIC,CAAAA,QAAJ,CAAaL,GAAb,CAAN,CAA0BI,GALiB,CAkBpDnB,OAAA,CAASJ,MAAT,CAAiBd,MAAOC,CAAAA,QAAxB,CAEAa,OAAOY,CAAAA,SAAUC,CAAAA,MAAjB,CAA0BY,QAAe,CAACpC,IAAD,CAAO0B,CAAP,CAAUC,IAAV,CAAgB,CACvD,IAAKtB,CAAAA,KAAMuB,CAAAA,MAAX,CAAkB5B,IAAlB,CACA2B,KAAA,EAFuD,CAKzDhB,OAAOY,CAAAA,SAAUK,CAAAA,MAAjB,CAA0BS,QAAe,CAACrC,IAAD,CAAO8B,GAAP,CAAY,CACnD,IAAKzB,CAAAA,KAAMuB,CAAAA,MAAX,CAAkC,QAAhB,GAAA,MAAO5B,KAAP,CAA2Bc,MAAOO,CAAAA,IAAP,CAAYrB,IAAZ,CAAkB8B,GAAlB,CAA3B,CAAoD9B,IAAtE,CAEA,OAAO,KAH4C,CAMrDW,OAAOY,CAAAA,SAAUP,CAAAA,MAAjB,CAA0BsB,QAAqB,CAAClB,GAAD,CAAMc,GAAN,CAAWJ,GAAX,CAAgB,CACzDS,GAAAA,CAA2B,QAAf,GAAA,MAAOL,IAAP;AAA0BpB,MAAOO,CAAAA,IAAP,CAAYa,GAAZ,CAAiBJ,GAAjB,CAA1B,CAAkDI,GAElE,KAAKF,CAAAA,GAAL,EACI5B,IAAAA,CAAO,IAAKC,CAAAA,KAAM4B,CAAAA,MAAX,EACX,OAAOjB,OAAA,CAAOuB,GAAP,CAAkBnC,GAAlB,CAAwBgB,GAAxB,CAA6B,IAAKX,CAAAA,SAAlC,CAA6C,IAAKF,CAAAA,IAAlD,CALsD,CAgB/Dd,OAAOC,CAAAA,OAAP,CAAiB,CACfC,KAAMiB,UADS,CAEfD,OAAQE,YAFO,CAGHD,UAHG,CAIDC,YAJC,CAvF6F;",
"sources":["node_modules/browserify-sign/browser/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_sign$browser$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar createHash = require('create-hash');\nvar stream = require('readable-stream');\nvar inherits = require('inherits');\nvar sign = require('./sign');\nvar verify = require('./verify');\n\nvar algorithms = require('./algorithms.json');\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex');\n  algorithms[key.toLowerCase()] = algorithms[key];\n});\n\nfunction Sign(algorithm) {\n  stream.Writable.call(this);\n\n  var data = algorithms[algorithm];\n  if (!data) { throw new Error('Unknown message digest'); }\n\n  this._hashType = data.hash;\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Sign, stream.Writable);\n\nSign.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\n\nSign.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n\n  return this;\n};\n\nSign.prototype.sign = function signMethod(key, enc) {\n  this.end();\n  var hash = this._hash.digest();\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag);\n\n  return enc ? sig.toString(enc) : sig;\n};\n\nfunction Verify(algorithm) {\n  stream.Writable.call(this);\n\n  var data = algorithms[algorithm];\n  if (!data) { throw new Error('Unknown message digest'); }\n\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Verify, stream.Writable);\n\nVerify.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\n\nVerify.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n\n  return this;\n};\n\nVerify.prototype.verify = function verifyMethod(key, sig, enc) {\n  var sigBuffer = typeof sig === 'string' ? Buffer.from(sig, enc) : sig;\n\n  this.end();\n  var hash = this._hash.digest();\n  return verify(sigBuffer, hash, key, this._signType, this._tag);\n};\n\nfunction createSign(algorithm) {\n  return new Sign(algorithm);\n}\n\nfunction createVerify(algorithm) {\n  return new Verify(algorithm);\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","Sign","algorithm","stream","Writable","call","data","algorithms","Error","_hashType","hash","_hash","createHash","_tag","id","_signType","sign","Verify","createSign","createVerify","Buffer","inherits","verify","Object","keys","forEach","key","from","toLowerCase","prototype","_write","Sign.prototype._write","_","done","update","Sign.prototype.update","enc","Sign.prototype.sign","end","digest","sig","toString","Verify.prototype._write","Verify.prototype.update","Verify.prototype.verify","sigBuffer"]
}
