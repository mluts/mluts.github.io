{
"version":3,
"file":"module$node_modules$browserify_aes$modes$cfb.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAIzGC,QAASA,aAAa,CAACC,IAAD,CAAOC,IAAP,CAAaC,OAAb,CAAsB,CAC1C,IAAIC,IAAMF,IAAKG,CAAAA,MAAf,CACIC,IAAMC,GAAA,CAAIL,IAAJ,CAAUD,IAAKO,CAAAA,MAAf,CACVP,KAAKO,CAAAA,MAAL,CAAcP,IAAKO,CAAAA,MAAOC,CAAAA,KAAZ,CAAkBL,GAAlB,CACdH,KAAKS,CAAAA,KAAL,CAAaC,MAAOC,CAAAA,MAAP,CAAc,CAACX,IAAKS,CAAAA,KAAN,CAAaP,OAAA,CAAUD,IAAV,CAAiBI,GAA9B,CAAd,CACb,OAAOA,IALmC,CAH5C,IAAIK,OAASd,OAAA,CAAQ,uCAAR,CAAuBc,CAAAA,MAApC,CACIJ,IAAMV,OAAA,CAAQ,sCAAR,CAUVE,QAAQc,CAAAA,OAAR,CAAkBC,QAAS,CAACb,IAAD,CAAOC,IAAP,CAAaC,OAAb,CAAsB,CAI/C,IAHA,IAAIG,IAAMK,MAAOI,CAAAA,WAAP,CAAmB,CAAnB,CAAV,CACIX,GAEJ,CAAOF,IAAKG,CAAAA,MAAZ,CAAA,CAME,GAL2B,CAKvB;AALAJ,IAAKO,CAAAA,MAAOH,CAAAA,MAKZ,GAJFJ,IAAKO,CAAAA,MACL,CADcP,IAAKe,CAAAA,OAAQC,CAAAA,YAAb,CAA0BhB,IAAKS,CAAAA,KAA/B,CACd,CAAAT,IAAKS,CAAAA,KAAL,CAAaC,MAAOI,CAAAA,WAAP,CAAmB,CAAnB,CAGX,EAAAd,IAAKO,CAAAA,MAAOH,CAAAA,MAAZ,EAAsBH,IAAKG,CAAAA,MAA/B,CACED,GAEA,CAFMH,IAAKO,CAAAA,MAAOH,CAAAA,MAElB,CADAC,GACA,CADMK,MAAOC,CAAAA,MAAP,CAAc,CAACN,GAAD,CAAMN,YAAA,CAAaC,IAAb,CAAmBC,IAAKO,CAAAA,KAAL,CAAW,CAAX,CAAcL,GAAd,CAAnB,CAAuCD,OAAvC,CAAN,CAAd,CACN,CAAAD,IAAA,CAAOA,IAAKO,CAAAA,KAAL,CAAWL,GAAX,CAHT,KAIO,CACLE,GAAA,CAAMK,MAAOC,CAAAA,MAAP,CAAc,CAACN,GAAD,CAAMN,YAAA,CAAaC,IAAb,CAAmBC,IAAnB,CAAyBC,OAAzB,CAAN,CAAd,CACN,MAFK,CAMT,MAAOG,IApBwC,CAZwD;",
"sources":["node_modules/browserify-aes/modes/cfb.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_aes$modes$cfb\"] = function(global,require,module,exports) {\nvar Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","encryptStart","self","data","decrypt","len","length","out","xor","_cache","slice","_prev","Buffer","concat","encrypt","exports.encrypt","allocUnsafe","_cipher","encryptBlock"]
}
