{"version":3,"sources":["aw/view/login.cljs"],"mappings":";AAKA,4BAAA,5BAAOA,gEAAaC;AAApB,AACE,GAAI,AAACC,sBAAMD;AAAGA;;AAAd,0FAAiBA;;;AAEnB,AAAA,+BAAA,uCAAAE,tEAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,kEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,oEAAA,uBAAAG,3FAAMD,+EAAgBc,MAAMC;AAA5B,AAAA,IAAAb,aAAAD;IAAAE,aAAA,AAAAC,4CAAAF,WAAA,IAAA;IAAAC,iBAAA,AAAAE,4BAAAF;kBAAA,AAAAG,4CAAAH,eAAA,zEAAsCa,4IAKiB,AAACG,0BAAe,AAACC,eAAKN;YAL7E,AAAAR,4CAAAH,eAAA,qDAAA,xHACsCc;SADtC,AAAAX,4CAAAH,eAAA,gDAAA,hHAEsCe,mMAESJ;AAJ/C,AAAA,GAMS,GAAA,UAAA,TAAOA;AANhB;AAAA,AAAA,MAAA,KAAAP,MAAA;;;AAAA,GAMuB,GAAA,UAAA,TAAOQ;AAN9B;AAAA,AAAA,MAAA,KAAAR,MAAA;;;AAAA,0FAAA,sDAAA,2CAAA,2DAAA,NAQiBU,yEACO,iBAAAI,mBAAIL;AAAJ,AAAA,oBAAAK;AAAAA;;AAAgB,OAACF,0BAAe,AAACC,eAAKN;;KAT9D,2EAAA,2JAAA,jLAUiB,AAACM,eAAKN,6DACL,+CAAA,AAAAQ,/CAACC,+DAAQR,OAAM,AAACxB,0BAAY2B,oEACxB,WAAKM;AAAL,AACE,OAACC,mDAAMV,MAAMW,mBAAS,AAACnC,0BAAY2B,IAAI,AAAA,AAAIM;;;;AAbnE,CAAA,uDAAA,vDAAMxB;;AAAN;AAAA,CAAA,iDAAA,WAAAQ,5DAAMR;AAAN,AAAA,IAAAS,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;IAAAI,WAAA,AAAAF,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAK,qBAAA;AAAA,AAAA,OAAAA,wDAAAJ,SAAAG,SAAAJ;;;AAAA,AAeA,2BAAA,3BAAMmB,8DAAYZ;AAAlB,AAAA,0FAAA,sDAAA,2CAAA,+DAEe,WAAKa;AAAL,AACE,AAAiBA;;AACjB,mBAAA,ZAACC;6eAJlB,mFAAA,sDAAA,2CAAA,qDAAA,SAAA,sDAAA,1wBAKG,kEAAA,6GAAA,/KAACC,uHAAsBf,mHACvB,kEAAA,oHAAA,tLAACe,8HAAyBf;;AAI7B,qBAAA,rBAAMgB;AAAN,AACE,IAAMC,cAAY,gDAAA,hDAACC;AAAnB,AACE;AAAA,AAAA,0FAAA,mDAAA,mFAAA,kDAAA,mBAAA,mFAGIN,yBAAWK","names":["aw.view.login/ensure-coll","v","cljs.core/coll?","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","aw.view.login/keyboard-input","p__26051","vec__26052","map__26055","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","js/Error","seq26048","G__26049","cljs.core/first","cljs.core/next","G__26050","self__5754__auto__","-name","state","placeholder","-type","kp","clojure.string/capitalize","cljs.core/name","or__5045__auto__","cljs.core/deref","cljs.core.get_in","event","cljs.core.swap_BANG_","cljs.core/assoc-in","aw.view.login/login-form","e","js/console.log","aw.view.login.keyboard_input","aw.view.login/view","login-state","reagent.core.atom"],"sourcesContent":["(ns aw.view.login\n  (:require\n   [reagent.core :as r]\n   [clojure.string :as str]))\n\n(defn- ensure-coll [v]\n  (if (coll? v) v [v]))\n\n(defn keyboard-input [-name state & [{placeholder :placeholder\n                                      -type :type\n                                      kp :kp\n                                      :or {-type \"text\"\n                                           kp [-name]\n                                           placeholder (str/capitalize (name -name))}}]]\n  {:pre [(some? -name) (some? state)]}\n\n  [:input {:type -type\n           :placeholder (or placeholder (str/capitalize (name -name)))\n           :name (name -name)\n           :value (get-in @state (ensure-coll kp))\n           :on-change (fn [event]\n                        (swap! state assoc-in (ensure-coll kp) (-> event .-target .-value)))}])\n\n(defn login-form [state]\n  [:form\n   {:on-submit (fn [e]\n                 (.preventDefault e)\n                 (js/console.log \"Submit!\"))}\n   (keyboard-input :login state :login)\n   (keyboard-input :password state :password)\n\n   [:input {:type \"submit\" :value \"Login\"}]])\n\n(defn view []\n  (let [login-state (r/atom {})]\n    (fn []\n      [:div\n       [:h1 \"AW Login\"]\n       [login-form login-state]])))\n"]}