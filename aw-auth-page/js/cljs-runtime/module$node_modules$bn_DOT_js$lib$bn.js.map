{
"version":3,
"file":"module$node_modules$bn_DOT_js$lib$bn.js",
"lineCount":99,
"mappings":"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",
"sources":["node_modules/bn_DOT_js/lib/bn.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bn_DOT_js$lib$bn\"] = function(global,require,module,exports) {\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n\n};"],
"names":["shadow$provide","global","require","module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","len","Math","min","i","b","move","dest","src","inspect","toString","smallMulTo","self","num","out","a","carry","k","ncarry","rword","maxJ","j","max","_strip","bigMulTo","hncarry","lo","MPrime","name","p","n","bitLength","iushln","isub","tmp","_tmp","K256","call","P224","P192","P25519","Red","m","prime","_prime","gtn","Mont","shift","r2","imod","sqr","rinv","_invmp","minv","isubn","div","umod","sub","wordSize","Buffer","window","e","BN.isBN","Array","isArray","BN.max","left","right","cmp","BN.min","BN.prototype._init","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","BN.prototype._initNumber","BN.prototype._initArray","ceil","off","w","BN.prototype._parseHex","BN.prototype._parseBase","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","BN.prototype.copy","_move","BN.prototype._move","clone","BN.prototype.clone","_expand","BN.prototype._expand","size","BN.prototype._strip","_normSign","BN.prototype._normSign","Symbol","for","zeros","groupSizes","groupBases","BN.prototype.toString","padding","groupSize","groupBase","isZero","modrn","idivn","toNumber","BN.prototype.toNumber","ret","toJSON","BN.prototype.toJSON","toBuffer","BN.prototype.toBuffer","toArrayLike","BN.prototype.toArray","BN.prototype.toArrayLike","ArrayType","byteLength","reqLength","allocUnsafe","postfix","res","_toArrayLikeLE","BN.prototype._toArrayLikeLE","position","_toArrayLikeBE","BN.prototype._toArrayLikeBE","_countBits","clz32","BN.prototype._countBits","t","_zeroBits","BN.prototype._zeroBits","BN.prototype.bitLength","hi","zeroBits","BN.prototype.zeroBits","BN.prototype.byteLength","toTwos","BN.prototype.toTwos","width","abs","inotn","iaddn","fromTwos","BN.prototype.fromTwos","testn","notn","ineg","isNeg","BN.prototype.isNeg","neg","BN.prototype.neg","BN.prototype.ineg","iuor","BN.prototype.iuor","ior","BN.prototype.ior","or","BN.prototype.or","uor","BN.prototype.uor","iuand","BN.prototype.iuand","iand","BN.prototype.iand","and","BN.prototype.and","uand","BN.prototype.uand","iuxor","BN.prototype.iuxor","ixor","BN.prototype.ixor","xor","BN.prototype.xor","uxor","BN.prototype.uxor","BN.prototype.inotn","bytesNeeded","bitsLeft","BN.prototype.notn","setn","BN.prototype.setn","bit","wbit","iadd","BN.prototype.iadd","add","BN.prototype.add","BN.prototype.isub","BN.prototype.sub","comb10MulTo","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","mid","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","mulTo","BN.prototype.mulTo","BN.prototype.mul","mulf","BN.prototype.mulf","BN.prototype.imul","BN.prototype.imuln","isNegNum","muln","BN.prototype.muln","BN.prototype.sqr","isqr","BN.prototype.isqr","BN.prototype.pow","q","BN.prototype.iushln","bits","s","carryMask","newCarry","ishln","BN.prototype.ishln","iushrn","BN.prototype.iushrn","hint","extended","mask","h","ishrn","BN.prototype.ishrn","shln","BN.prototype.shln","ushln","BN.prototype.ushln","shrn","BN.prototype.shrn","ushrn","BN.prototype.ushrn","BN.prototype.testn","imaskn","BN.prototype.imaskn","maskn","BN.prototype.maskn","BN.prototype.iaddn","BN.prototype._iaddn","BN.prototype.isubn","addn","BN.prototype.addn","subn","BN.prototype.subn","iabs","BN.prototype.iabs","BN.prototype.abs","_ishlnsubmul","BN.prototype._ishlnsubmul","_wordDiv","BN.prototype._wordDiv","mode","bhi","bhiBits","diff","qj","divmod","BN.prototype.divmod","positive","divn","BN.prototype.div","BN.prototype.mod","BN.prototype.umod","divRound","BN.prototype.divRound","dm","half","andln","BN.prototype.modrn","acc","modn","BN.prototype.modn","BN.prototype.idivn","BN.prototype.divn","egcd","BN.prototype.egcd","x","y","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","BN.prototype._invmp","x1","x2","delta","cmpn","BN.prototype.gcd","invm","BN.prototype.invm","BN.prototype.isEven","BN.prototype.isOdd","BN.prototype.andln","bincn","BN.prototype.bincn","BN.prototype.isZero","BN.prototype.cmpn","BN.prototype.cmp","ucmp","BN.prototype.ucmp","BN.prototype.gtn","gt","BN.prototype.gt","gten","BN.prototype.gten","gte","BN.prototype.gte","ltn","BN.prototype.ltn","lt","BN.prototype.lt","lten","BN.prototype.lten","lte","BN.prototype.lte","eqn","BN.prototype.eqn","eq","BN.prototype.eq","BN.red","toRed","BN.prototype.toRed","ctx","convertTo","_forceRed","fromRed","BN.prototype.fromRed","convertFrom","BN.prototype._forceRed","forceRed","BN.prototype.forceRed","redAdd","BN.prototype.redAdd","redIAdd","BN.prototype.redIAdd","redSub","BN.prototype.redSub","redISub","BN.prototype.redISub","redShl","BN.prototype.redShl","shl","redMul","BN.prototype.redMul","_verify2","redIMul","BN.prototype.redIMul","redSqr","BN.prototype.redSqr","_verify1","redISqr","BN.prototype.redISqr","redSqrt","BN.prototype.redSqrt","sqrt","redInvm","BN.prototype.redInvm","redNeg","BN.prototype.redNeg","redPow","BN.prototype.redPow","primes","k256","p224","p192","p25519","MPrime.prototype._tmp","ireduce","MPrime.prototype.ireduce","split","imulK","rlen","undefined","strip","MPrime.prototype.split","input","MPrime.prototype.imulK","K256.prototype.split","output","outLen","prev","next","K256.prototype.imulK","P25519.prototype.imulK","BN._prime","Red.prototype._verify1","Red.prototype._verify2","Red.prototype.imod","Red.prototype.neg","Red.prototype.add","Red.prototype.iadd","Red.prototype.sub","Red.prototype.isub","Red.prototype.shl","Red.prototype.imul","Red.prototype.mul","Red.prototype.isqr","Red.prototype.sqr","Red.prototype.sqrt","mod3","one","nOne","lpow","z","Red.prototype.invm","inv","Red.prototype.pow","wnd","current","currentLen","windowSize","Red.prototype.convertTo","Red.prototype.convertFrom","mont","BN.mont","Mont.prototype.convertTo","Mont.prototype.convertFrom","Mont.prototype.imul","u","Mont.prototype.mul","Mont.prototype.invm"]
}
