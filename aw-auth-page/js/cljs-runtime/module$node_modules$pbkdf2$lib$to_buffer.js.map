{
"version":3,
"file":"module$node_modules$pbkdf2$lib$to_buffer.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACrG,IAAIC,OAASH,OAAA,CAAQ,uCAAR,CAAuBG,CAAAA,MAEpCF,OAAOC,CAAAA,OAAP,CAAiBE,QAAS,CAACC,KAAD,CAAQC,QAAR,CAAkBC,IAAlB,CAAwB,CAChD,GAAIJ,MAAOK,CAAAA,QAAP,CAAgBH,KAAhB,CAAJ,CACE,MAAOA,MACF,IAAqB,QAArB,GAAI,MAAOA,MAAX,CACL,MAAOF,OAAOM,CAAAA,IAAP,CAAYJ,KAAZ,CAAmBC,QAAnB,CACF,IAAII,WAAYC,CAAAA,MAAZ,CAAmBN,KAAnB,CAAJ,CACL,MAAOF,OAAOM,CAAAA,IAAP,CAAYJ,KAAMO,CAAAA,MAAlB,CAEP,MAAM,KAAIC,SAAJ,CAAcN,IAAd,CAAqB,0DAArB,CAAN,CAR8C,CAHmD;",
"sources":["node_modules/pbkdf2/lib/to-buffer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pbkdf2$lib$to_buffer\"] = function(global,require,module,exports) {\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","module.exports","thing","encoding","name","isBuffer","from","ArrayBuffer","isView","buffer","TypeError"]
}
